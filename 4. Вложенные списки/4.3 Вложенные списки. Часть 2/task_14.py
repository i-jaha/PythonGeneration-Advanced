'''
–ü–æ–¥—Å–ø–∏—Å–∫–∏ —Å–ø–∏—Å–∫–∞ üå∂Ô∏èüå∂Ô∏è
–ü–æ–¥—Å–ø–∏—Å–æ–∫ ‚Äì —á–∞—Å—Ç—å –¥—Ä—É–≥–æ–≥–æ —Å–ø–∏—Å–∫–∞. 
–ü–æ–¥—Å–ø–∏—Å–æ–∫ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç, –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–ª–∏ –¥–∞–∂–µ –Ω–∏ –æ–¥–Ω–æ–≥–æ. 
–ù–∞–ø—Ä–∏–º–µ—Ä, [1], [2], [3] –∏ [4] ‚Äì –ø–æ–¥—Å–ø–∏—Å–∫–∏ —Å–ø–∏—Å–∫–∞ [1, 2, 3, 4]. 
–°–ø–∏—Å–æ–∫ [2, 3] ‚Äì –ø–æ–¥—Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–∞ [1, 2, 3, 4], 
–Ω–æ —Å–ø–∏—Å–æ–∫ [2, 4] –Ω–µ –ø–æ–¥—Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–∞ [1, 2, 3, 4], 
—Ç–∞–∫ –∫–∞–∫ —ç–ª–µ–º–µ–Ω—Ç—ã 2 –∏ 4 –≤–æ –≤—Ç–æ—Ä–æ–º —Å–ø–∏—Å–∫–µ –Ω–µ —Å–º–µ–∂–Ω—ã–µ 
(–æ–Ω–∏ —Ä–∞–∑—Ä—ã–≤–∞—é—Ç—Å—è —ç–ª–µ–º–µ–Ω—Ç–æ–º 3). 
–ü—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ ‚Äì –ø–æ–¥—Å–ø–∏—Å–æ–∫ –ª—é–±–æ–≥–æ —Å–ø–∏—Å–∫–∞. 
–°–∞–º —Å–ø–∏—Å–æ–∫ ‚Äì –ø–æ–¥—Å–ø–∏—Å–æ–∫ —Å–∞–º–æ–≥–æ —Å–µ–±—è, 
—Ç–æ –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ [1, 2, 3, 4] –ø–æ–¥—Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–∞ [1, 2, 3, 4].
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è —Å–∏–º–≤–æ–ª—ã. 
–ò–∑ –¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è —Å–ø–∏—Å–æ–∫. 
–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫, 
—Å–æ–¥–µ—Ä–∂–∞—â–∏–π –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø–æ–¥—Å–ø–∏—Å–∫–∏ —Å–ø–∏—Å–∫–∞, –≤–∫–ª—é—á–∞—è –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫.

–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞, 
—Å–æ–¥–µ—Ä–∂–∞—â–∞—è —Å–∏–º–≤–æ–ª—ã, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª–æ–º –ø—Ä–æ–±–µ–ª–∞.

–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —É–∫–∞–∑–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø–æ–¥—Å–ø–∏—Å–∫–∏, 
–≤–∫–ª—é—á–∞—è –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. 
–ü–æ—Ä—è–¥–æ–∫ —Å–ø–∏—Å–∫–æ–≤ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–π –¥–ª–∏–Ω—ã –¥–æ–ª–∂–µ–Ω —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å 
–ø–æ—Ä—è–¥–∫—É –∏—Ö –≤—Ö–æ–∂–¥–µ–Ω–∏—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–ø–∏—Å–æ–∫.
'''

def get_all_sublists(lst):
    result = [[]]
    n = len(lst)
    for size in range(1, n + 1):
        cur_seq = []
        for i in range(n - size + 1):
            cur_seq.append(lst[i : (i+size)])
        result.extend(cur_seq)
    return result

data = input().split()
print(get_all_sublists(data))